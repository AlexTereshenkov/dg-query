steps:
  - label: ":bazel: Build"
    commands:
      - "echo '--- Prepare environment'"
      - sudo apt-get install wget tree libdatetime-perl libdatetime-format-dateparse-perl libcapture-tiny-perl -y
      - wget https://github.com/bazelbuild/bazelisk/releases/download/v1.20.0/bazelisk-linux-amd64
      - chmod +x bazelisk-linux-amd64
      - sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel
      - .buildkite/build-bazel.sh

    artifact_paths: 
      - bazel-testlogs/tests/dg-query_test/test.xml

  - label: ":bazel: Build in Docker"
    commands:
      - "echo '--- Prepare environment'"
      - sudo apt-get install wget
      - wget https://github.com/bazelbuild/bazelisk/releases/download/v1.20.0/bazelisk-linux-amd64
      - chmod +x bazelisk-linux-amd64
      - sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel
      
      - "echo '--- Build'"
      - bazel --version
      - build-support/create-bazelrc-ci.sh
      # `--load` ensures that the image built is loaded into the local Docker environment, 
      # making it immediately available to run or reference by tag; otherwise, the image 
      # will only exist in Docker's build cache.
      - docker build -t go-build-env -f platforms/Dockerfile --load .
      - docker image ls
      - bazel build //... --spawn_strategy=docker --experimental_enable_docker_sandbox --platforms="//platforms:docker"
      - bazel test //...  --spawn_strategy=docker --experimental_enable_docker_sandbox --platforms="//platforms:docker"

  - label: ":bazel: Build remote (BuildBuddy)"
    commands:
      - "echo '--- Prepare environment'"
      - sudo apt-get install wget
      - wget https://github.com/bazelbuild/bazelisk/releases/download/v1.20.0/bazelisk-linux-amd64
      - chmod +x bazelisk-linux-amd64
      - sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel
      
      - "echo '--- Build'"
      - bazel --version
      - build-support/create-bazelrc-ci.sh
      - echo "build --remote_executor=grpcs://remote.buildbuddy.io" >> .bazelrc.ci
      - bazel build //... 
      - bazel test //...

  - label: ":go: Build"
    commands:
        - .buildkite/build-go.sh

    artifact_paths: 
      - dist/coverage.html
