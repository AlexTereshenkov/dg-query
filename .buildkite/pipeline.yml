steps:
  - label: ":bazel: Build"
    commands:
      
      - "echo '--- Prepare environment'"
      - sudo apt-get install wget tree
      - wget https://github.com/bazelbuild/bazelisk/releases/download/v1.20.0/bazelisk-linux-amd64
      - chmod +x bazelisk-linux-amd64
      - sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel
      
      - "echo '--- Build'"
      - bazel --version
      - bazel build //...
      - ls bazel-*
      
      - "echo '--- Static checks'"
      - "echo 'Gazelle'"
      - bazel run //:gazelle -- -mode=diff
      - "echo 'gofmt'"
      # getting exit code 1 despite not needing to format anything, 
      # so running the gofmt in "check" mode and not inspecting the exit code.
      - bazel run @go_sdk//:bin/gofmt -- -s -l .

      - "echo '--- Run'"
      - bazel build //... && bazel-bin/dg-query_/dg-query dependencies --dg="examples/dg-real.json" foo.py spam.py
      
      - "echo '--- Test'"
      - bazel test --test_output=all --test_summary=detailed //... 
    
  - label: ":go: Build"
    commands:
      - |
        echo --- 'Prepare environment'
        sudo apt-get install wget
        wget https://dl.google.com/go/go1.22.7.linux-amd64.tar.gz
        tar -C /usr/local -xzf go1.22.7.linux-amd64.tar.gz
      
        echo --- 'Check Go installation'
        ls /usr/local/go
        export GOROOT=/usr/local/go
        export PATH=$GOROOT/bin:$PATH
        echo $PATH
        go version
        
        echo --- 'Build project'
        go build
        go test ./cmd
        go test ./tests
        go run main.go dependencies --dg='examples/dg-real.json' foo.py spam.py

    artifact_paths: 
      - bazel-testlogs/dg-query_test/test.xml
