load("@bazel_gazelle//:def.bzl", "gazelle")
load("@com_github_sluongng_nogo_analyzer//:def.bzl", "nogo_config")
load("@com_github_sluongng_nogo_analyzer//staticcheck:def.bzl", "staticcheck_analyzers")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "nogo")
load(":staticcheck.bzl", "STATICCHECK_ANALYZERS", "STATICCHECK_OVERRIDE")

nogo_config(
    name = "nogo_config",
    out = "nogo_config.json",
    analyzers = STATICCHECK_ANALYZERS,
    override = STATICCHECK_OVERRIDE,
)

nogo(
    name = "nogo",
    config = ":nogo_config.json",
    visibility = ["//visibility:public"],
    deps = staticcheck_analyzers(STATICCHECK_ANALYZERS),
)

# gazelle:prefix github.com/AlexTereshenkov/dg-query

# Docs: https://github.com/bazelbuild/bazel-gazelle?tab=readme-ov-file#directives
gazelle(name = "gazelle")

# Docs: https://github.com/bazelbuild/bazel-gazelle?tab=readme-ov-file#setup
gazelle(
    name = "update-deps",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
    ],
    command = "update-repos",
)

go_library(
    name = "dg-query_lib",
    srcs = ["main.go"],
    importpath = "github.com/AlexTereshenkov/dg-query",
    visibility = ["//visibility:public"],
    deps = ["//cmd"],
)

go_binary(
    name = "dg-query",
    embed = [":dg-query_lib"],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "run_coverage_with_genhtml",
    srcs = ["scripts/codecov.sh"],
    args = ["$(location @lcov//:genhtml)"],
    data = [
        "@lcov//:genhtml",
        "@lcov//:bin",
        # find a way to refer to files with a `glob` or `filegroup`; none of these worked --
        # the files are not included into the runfiles directory for some reason, so listing
        # them individually is required
        "//cmd:cycles.go",
        "//cmd:cycles_test.go",
        "//cmd:dependencies.go",
        "//cmd:dependencies_test.go",
        "//cmd:dependents.go",
        "//cmd:dependents_test.go",
        "//cmd:dg.go",
        "//cmd:metrics.go",
        "//cmd:metrics_test.go",
        "//cmd:paths.go",
        "//cmd:paths_test.go",
        "//cmd:root.go",
        "//cmd:subgraph.go",
        "//cmd:subgraph_test.go",
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "buildifier_bin",
    srcs = ["@buildifier//file:buildifier"],
)

# to enable formatting of *.bzl files that are not picked up by Gazelle
sh_binary(
    name = "buildifier",
    srcs = ["@buildifier//file:buildifier"],
    args = [
        "--lint=fix",
        "-r",
        ".",
    ],
    # one cannot use `glob` inside a Bazel package (as there's `tests/BUILD.bazel` file)
    # so the file is stored in `defs/` instead
    data = glob(["defs/defs.*"]),
    visibility = ["//visibility:public"],
)

# TODO: put in a macro instead (why can't built-in targets be found in .bzl file?)
sh_binary(
    name = "buildifier-check",
    srcs = ["@buildifier//file:buildifier"],
    args = [
        "--lint=warn",
        "--mode=check",
        "-r",
        ".",
    ],
    # one cannot use `glob` inside a Bazel package (as there's `tests/BUILD.bazel` file)
    # so the file is stored in `defs/` instead
    data = glob(["defs/defs.*"]),
    visibility = ["//visibility:public"],
)
