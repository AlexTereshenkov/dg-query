load("@buildifier_prebuilt//:rules.bzl", "buildifier")
load("@gazelle//:def.bzl", "gazelle")
load("@rules_go//go:def.bzl", "TOOLS_NOGO", "go_binary", "go_library", "nogo")
load("@rules_shell//shell:sh_binary.bzl", "sh_binary")

gazelle(name = "gazelle")

buildifier(
    name = "buildifier",
    exclude_patterns = ["./defs/constants.bzl"],
    lint_mode = "fix",
    mode = "fix",
)

buildifier(
    name = "buildifier-check",
    exclude_patterns = ["./defs/constants.bzl"],
    lint_mode = "warn",
    mode = "diff",
)

# this would cause nogo analyzer to fail when running `bazel build //...`
# obj := false; res := fmt.Sprintf("%d", obj); fmt.Println(res)
# go run main.go subgraph --dg="examples/dg-linked-list.json" --root="7"
nogo(
    name = "nogo",
    visibility = ["//visibility:public"],
    deps = TOOLS_NOGO,
)

go_library(
    name = "dg-query_lib",
    srcs = ["main.go"],
    importpath = "github.com/AlexTereshenkov/dg-query",
    visibility = ["//visibility:private"],
    deps = ["//cmd"],
)

go_binary(
    name = "dg-query",
    embed = [":dg-query_lib"],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "run_coverage_with_genhtml",
    srcs = ["scripts/codecov.sh"],
    args = ["$(location @lcov//:bin/genhtml)"],
    data = [
        "@lcov//:bin/genhtml",
        # if for some reason there will be a problem to refer to files with a `glob` or `filegroup`
        # (the files are not included into the runfiles directory for some reason), you can list
        # them individually here
        "//cmd:exported_go_files",
    ],
    visibility = ["//visibility:public"],
)
